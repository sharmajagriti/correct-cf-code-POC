
AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This template deploys a VPC with a pair of public and private data-private subnets spread
  across three Availability Zones (Zone 1, Zone 2). It deploys an Internet Gateway and adds
  public routes to the pair of public subnets. Additionally, it deploys a NAT Gateway in the pair
  of public subnets and configures public routes for them in the pair of private data-private subnets.


Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - W2001  # Ignore warning W2001

  # Create Parameter Groups and Label
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Basic Information"
        Parameters:

          - pProject
          
          - pEnvironment
          - pResourceName
     
   
      - Label:
          default: "Network Configuration"
        Parameters:
          - pCidrBlockVPC
          - pCidrBlockPublicSubnet1
          - pCidrBlockPublicSubnet2
          - pCidrBlockPrivateSubnet1
          - pCidrBlockPrivateSubnet2
    ParameterLabels:
      pCidrBlockPublicSubnet1:
        default: "CidrBlock for Public Subnet AZ-1"
      pCidrBlockPublicSubnet2:
        default: "CidrBlock for Public Subnet AZ-2"
      pCidrBlockPrivateSubnet1:
        default: "CidrBlock for Private Subnet AZ-1"
      pCidrBlockPrivateSubnet2:
        default: "CidrBlock for Private Subnet AZ-2"
Parameters:
  
  pProject:
    Type: "String"
    Default: "project"
    AllowedPattern: "[a-z]*"
    MaxLength: 8

  pEnvironment:
    Description: "Server Environment name."
    ConstraintDescription: "Choose an Environment from the drop down"
    Type: String
    Default: "dev"
    MaxLength: 4
    AllowedValues:
      - dev
      - sit
      - uat
      - stage
      - prod
  pResourceName:
    Type: String
    Default: "t2"
    AllowedPattern: "[a-z0-9]*"
    MaxLength: 8
  pCidrBlockVPC:
    Description: "VPC CIDR Range"
    Type: String
    Default: "10.0.0.0/16"
    MinLength: "10"
    MaxLength: "18"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  pCidrBlockPublicSubnet1:
    Description: "CidrBlock for Public Subnet in the Availability Zone 1"
    Type: "String"
    Default: "10.0.11.0/24"
    MinLength: '10'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  pCidrBlockPublicSubnet2:
    Description: "CidrBlock for  Public Subnet in the Availability Zone 2"
    Type: "String"
    Default: "10.0.12.0/24"
    MinLength: '10'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  pCidrBlockPrivateSubnet1:
    Description: "CidrBlock for  Private Subnet in the Availability Zone 1"
    Type: "String"
    Default: "10.0.21.0/24"
    MinLength: '10'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  pCidrBlockPrivateSubnet2:
    Description: "CidrBlock for  Private Subnet in the Availability Zone 2"
    Type: "String"
    Default: "10.0.22.0/24"
    MinLength: '10'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"


Mappings:
  RegionMap:
    us-east-1:
      az1: us-east-1a
      az2: us-east-1b
    


Resources:
  ## :: Create VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref pCidrBlockVPC
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-VPC"

  ## :: Create Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-InternetGateway"

  ## :: Attach Internet Gateway to VPC
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    DependsOn:
      - VPC
      - InternetGateway
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC


  #  Public Tier Resources AZ -1 and AZ -2
  ## --------------------------------------------------------------------


  ##  AZ -1 Resources
  ## ----------------------------------

  ## :: Create PublicRouteTable1
  PublicRouteTable1:
    Type: AWS::EC2::RouteTable
    DependsOn:
      - VPC
      - InternetGateway
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PublicRouteTable1"

  ## :: Route-out PublicRouteTable1 to Internet Gateway (Internet connection)
  InternetGatewayRoute1:
    Type: AWS::EC2::Route
    DependsOn:
      - InternetGateway
      - PublicRouteTable1
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable1

  ## :: Create PublicSubnet1
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn:
      - VPC
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref  pCidrBlockPublicSubnet1
      AvailabilityZone:
        Fn::FindInMap:
          - RegionMap
          - !Ref "AWS::Region"
          - az1
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PublicSubnet1"

  ## :: Associate PublicRouteTable1 with PublicSubnet1
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - PublicSubnet1
      - PublicRouteTable1
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable1

  ## :: Create ElasticIP1
  ElasticIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-ElasticIP1"

  ## :: Create NatGateway1 in PublicSubnet1
  NatGateway1:
    Type: AWS::EC2::NatGateway
    DependsOn:
      - ElasticIP1
      - PublicSubnet1
    Properties:
      SubnetId: !Ref PublicSubnet1
      AllocationId: !GetAtt ElasticIP1.AllocationId
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-NatGateway1"

  ## :: Create PublicNetworkAcl1
  PublicNetworkAcl1:
    Type: AWS::EC2::NetworkAcl
    DependsOn:
      - VPC
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PublicNetworkAcl1"

  ## :: Associate PublicNetworkAcl1 with PublicSubnet1
  PublicSubnet1NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    DependsOn:
      - PublicSubnet1
      - PublicNetworkAcl1
    Properties:
      SubnetId: !Ref PublicSubnet1
      NetworkAclId: !Ref PublicNetworkAcl1


  ##  AZ -2 Resources
  ## ----------------------------------


  ## :: Create PublicSubnet2
  PublicSubnet2:
    DependsOn:
      - VPC
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref  pCidrBlockPublicSubnet2
      AvailabilityZone:
        Fn::FindInMap:
          - RegionMap
          - !Ref "AWS::Region"
          - az2
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PublicSubnet2"

  ## :: Associate PublicRouteTable1 with PublicSubnet2
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - PublicSubnet2
      - PublicRouteTable1
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable1




  ## :: Associate PublicNetworkAcl1 with PublicSubnet2
  PublicSubnet2NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    DependsOn:
      - PublicSubnet2
      - PublicNetworkAcl1
    Properties:
      SubnetId: !Ref PublicSubnet2
      NetworkAclId: !Ref PublicNetworkAcl1


  #  Private Tier Resources AZ -1 and AZ -2
  ## ------------------------------------------------------------------------------


  #   AZ -1 Resources
  ## ----------------------------------

  ## :: Create PrivateRouteTable1
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    DependsOn:
      - VPC
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PrivateRouteTable1"

  ## :: Route-out PrivateRouteTable1 to NatGateway1 (Private Internet connection)
  NatGatewayRoute1:
    Type: AWS::EC2::Route
    DependsOn:
      - NatGateway1
      - PrivateRouteTable1
    Properties:
      NatGatewayId: !Ref NatGateway1
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0

  ## :: Create PrivateSubnet1
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn:
      - VPC
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref  pCidrBlockPrivateSubnet1
      AvailabilityZone:
        Fn::FindInMap:
          - RegionMap
          - !Ref "AWS::Region"
          - az1
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PrivateSubnet1"

  ## :: Associate PrivateRouteTable1 with PrivateSubnet1
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - PrivateSubnet1
      - PrivateRouteTable1
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  ## :: Create PrivateNetworkAcl1
  PrivateNetworkAcl1:
    Type: AWS::EC2::NetworkAcl
    DependsOn:
      - VPC
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PrivateNetworkAcl1"

  ## :: Associate PrivateNetworkAcl1 with PrivateSubnet1
  PrivateSubnet1NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    DependsOn:
      - PrivateSubnet1
      - PrivateNetworkAcl1
    Properties:
      SubnetId: !Ref PrivateSubnet1
      NetworkAclId: !Ref PrivateNetworkAcl1



  ##  AZ -2 Resources
  ## ----------------------------------

  ## :: Create PrivateSubnet2
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    DependsOn:
      - VPC
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref  pCidrBlockPrivateSubnet2
      AvailabilityZone:
        Fn::FindInMap:
          - RegionMap
          - !Ref "AWS::Region"
          - az2
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PrivateSubnet2"

  ## :: Associate PrivateRouteTable1 with PrivateSubnet2
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - PrivateSubnet2
      - PrivateRouteTable1
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable1

  ## :: Associate PrivateNetworkAcl with PrivateSubnet2
  PrivateSubnet2NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    DependsOn:
      - PrivateSubnet2
      - PrivateNetworkAcl1
    Properties:
      SubnetId: !Ref PrivateSubnet2
      NetworkAclId: !Ref PrivateNetworkAcl1


Outputs:
  
  StackExportPrefix:
    Description: A reference to the VPC
    Value: !Sub "${pProject}:${pEnvironment}:${pResourceName}"
    Export:
      Name: !Sub "${pProject}:${pEnvironment}:ExportPrefix"
  pProject:
    Description: A reference to the pProject
    Value: !Ref pProject
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-pProject"
  pEnvironment:
    Description: A reference to the pEnvironment
    Value: !Ref pEnvironment
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-pEnvironment"

  pCidrBlockVPC:
    Description: A reference to the pCidrBlockVPC
    Value: !Ref pCidrBlockVPC
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-pCidrBlockVPC"
  Region:
    Description: A reference to the VPC
    Value: !Ref "AWS::Region"
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-Region"
  VPC:
    Description: A reference to the VPC
    Value: !Ref VPC
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-VPC"
  InternetGateway:
    Description: A reference to the InternetGateway
    Value: !Ref InternetGateway
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-InternetGateway"



  #  Private Tier Resources AZ -1 and AZ -2
  ## ------------------------------------------------------------------------------


  #   AZ -1 Resources
  ## ----------------------------------

  PublicRouteTable1:
    Description: A reference to the PublicRouteTable1
    Value: !Ref PublicRouteTable1
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PublicRouteTable1"
  pCidrBlockPublicSubnet1:
    Description: A reference to the pCidrBlockPublicSubnet1
    Value: !Ref pCidrBlockPublicSubnet1
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-pCidrBlockPublicSubnet1"
  PublicSubnet1:
    Description: A reference to the PublicSubnet1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PublicSubnet1"
  PublicNetworkAcl1:
    Description: A reference to the PublicNetworkAcl1
    Value: !Ref PublicNetworkAcl1
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PublicNetworkAcl1"
  ElasticIP1:
    Description: A reference to the ElasticIP1
    Value: !Ref ElasticIP1
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-ElasticIP1"
  NatGateway1:
    Description: A reference to the NatGateway1
    Value: !Ref NatGateway1
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-NatGateway1"


  ##  AZ -2 Resources
  ## ----------------------------------

  pCidrBlockPublicSubnet2:
    Description: A reference to the pCidrBlockPublicSubnet2
    Value: !Ref pCidrBlockPublicSubnet2
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-pCidrBlockPublicSubnet2"
  PublicSubnet2:
    Description: A reference to the PublicSubnet2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PublicSubnet2"
  PublicSubnets:
    Description: A reference to the PublicSubnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ] ]
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PublicSubnets"


  #  Private Tier Resources AZ -1 and AZ -2
  ## ------------------------------------------------------------------------------

  #   AZ -1 Resources
  ## ----------------------------------

  PrivateRouteTable1:
    Description: A reference to the PrivateRouteTable1
    Value: !Ref PrivateRouteTable1
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PrivateRouteTable1"
  pCidrBlockPrivateSubnet1:
    Description: A reference to the pCidrBlockPrivateSubnet1
    Value: !Ref pCidrBlockPrivateSubnet1
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-pCidrBlockPrivateSubnet1"
  PrivateSubnet1:
    Description: A reference to the PrivateSubnet1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PrivateSubnet1"
  PrivateNetworkAcl1:
    Description: A reference to the PrivateNetworkAcl1
    Value: !Ref PrivateNetworkAcl1
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PrivateNetworkAcl1"



  ##  AZ -2 Resources
  ## ----------------------------------

  pCidrBlockPrivateSubnet2:
    Description: A reference to the pCidrBlockPrivateSubnet2
    Value: !Ref pCidrBlockPrivateSubnet2
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-pCidrBlockPrivateSubnet2"
  PrivateSubnet2:
    Description: A reference to the PrivateSubnet2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PrivateSubnet2"

  PrivateSubnets:
    Description: A reference to the PrivateSubnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ] ]
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PrivateSubnets"
